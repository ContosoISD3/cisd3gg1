{
	"name": "create_stage2_sql_db",
	"properties": {
		"activities": [
			{
				"name": "set sqlDBName",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "sqlDBName",
					"value": {
						"value": "sqls2_@{pipeline().parameters.sourceDirectory}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Stored procedure1",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "set sqlDBName",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[sp_executesql]",
					"storedProcedureParameters": {
						"command": {
							"value": {
								"value": "IF NOT EXISTS (SELECT * FROM sys.databases WHERE name = 'sqls2_@{pipeline().parameters.sourceDirectory}') \nBEGIN\n  CREATE DATABASE sqls2_@{pipeline().parameters.sourceDirectory}; \nEND;",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL_Serverless_OEA",
					"type": "LinkedServiceReference",
					"parameters": {
						"databaseName": "master"
					}
				}
			},
			{
				"name": "get folders in stage2p",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Stored procedure1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_ADLS_binary_folder",
						"type": "DatasetReference",
						"parameters": {
							"filesystem": "stage2p",
							"directory": {
								"value": "@pipeline().parameters.sourceDirectory",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "get folders in stage2p",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('get folders in stage2p').output.childItems",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "create or alter view for pseduonymized tables",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[sp_executesql]",
								"storedProcedureParameters": {
									"command": {
										"value": {
											"value": "CREATE OR ALTER VIEW @{item().name} AS\nSELECT * FROM OPENROWSET(\nBULK 'https://@{pipeline().parameters.storageAccount}.dfs.core.windows.net/stage2p/@{pipeline().parameters.sourceDirectory}/@{item().name}',\nFORMAT='DELTA'\n) AS [r]",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL_Serverless_OEA",
								"type": "LinkedServiceReference",
								"parameters": {
									"databaseName": {
										"value": "@variables('sqlDBName')",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "get folders in stage2np",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Stored procedure1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_ADLS_binary_folder",
						"type": "DatasetReference",
						"parameters": {
							"filesystem": "stage2np",
							"directory": {
								"value": "@pipeline().parameters.sourceDirectory",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "ForEach2",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "get folders in stage2np",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('get folders in stage2np').output.childItems",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "create or alter view for lookup tables",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[sp_executesql]",
								"storedProcedureParameters": {
									"command": {
										"value": {
											"value": "CREATE OR ALTER VIEW @{item().name} AS\nSELECT * FROM OPENROWSET(\nBULK 'https://@{pipeline().parameters.storageAccount}.dfs.core.windows.net/stage2np/@{pipeline().parameters.sourceDirectory}/@{item().name}',\nFORMAT='DELTA'\n) AS [r]",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL_Serverless_OEA",
								"type": "LinkedServiceReference",
								"parameters": {
									"databaseName": {
										"value": "@variables('sqlDBName')",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"storageAccount": {
				"type": "string",
				"defaultValue": "stoeacisd3gg1"
			},
			"sourceDirectory": {
				"type": "string",
				"defaultValue": "contoso_sis"
			}
		},
		"variables": {
			"sqlDBName": {
				"type": "String",
				"defaultValue": "sqls2_mydb"
			}
		},
		"folder": {
			"name": "OEA_Framework/Ingest"
		},
		"annotations": []
	}
}