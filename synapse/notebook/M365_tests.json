{
	"name": "M365_tests",
	"properties": {
		"folder": {
			"name": "2) OEA Framework/Modules/M365"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "spark2v3",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/7b9a4896-4541-483f-bdc7-d8f4ec6be3ee/resourceGroups/rg-oea-CISD3GG1/providers/Microsoft.Synapse/workspaces/syn-oea-cisd3gg1/bigDataPools/spark2v3",
				"name": "spark2v3",
				"type": "Spark",
				"endpoint": "https://syn-oea-cisd3gg1.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/spark2v3",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.0",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"%run /2) OEA Framework/Modules/M365/M365_lib"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"from io import StringIO\r\n",
					"#TechActivity\r\n",
					"schema_for_activity = StructType([StructField('SignalType', StringType()),StructField('StartTime', StringType()),StructField('UserAgent', StringType()),StructField('SignalId', StringType()),StructField('SisClassId', StringType()),StructField('ClassId', StringType()),StructField('ChannelId', StringType()),StructField('AppName', StringType()),StructField('ActorId', StringType()),StructField('ActorRole', StringType()),StructField('SchemaVersion', StringType()),StructField('AssignmentId', StringType()),StructField('SubmissionId', StringType()),StructField('Action', StringType()),StructField('DueDate', StringType()),StructField('ClassCreationDate', StringType()),StructField('Grade', StringType()),StructField('SourceFileExtension', StringType()),StructField('MeetingDuration', IntegerType())])\r\n",
					"\r\n",
					"data = '\"PostChannelMessage\",\"2021-06-02 14:48:11.0000000\",\"\",\"AAMkAGRlM2ViNzg5LWMzOGEtNGYyMC05MTFhLWE5MzAxNTk3NjMzNwBGAAAAAAD6n_vRPyLsQ4uBYtj1MoVQBwBONi1figD3Spv1d4sN1luqAAAAAGZ3AABONi1figD3Spv1d4sN1luqAADDKaaJAAA=\",\"\",\"9ab188a9-815d-411d-83a3-a98b56a6c614\",\"19:20990825150f4da78ffdcd6a05cfa2e2@thread.tacv2\",\"Teams\",\"5ddbce29-3ab9-405d-9350-05945a8a8542\",\"Student\",\"1.1\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"'\r\n",
					"f = StringIO(data)\r\n",
					"\r\n",
					"df = spark.read(f, header='false', schema=schema_for_activity)\r\n",
					"print(df)"
				],
				"execution_count": 28
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"tmp = spark.sparkContext.parallelize(\r\n",
					"  \"\"\"\r\n",
					"    |id, date, timedump\r\n",
					"    |1, \"2014/01/01 23:00:01\",1499959917383\r\n",
					"    |2, \"2014/11/31 12:40:32\",1198138008843\r\n",
					"  \"\"\".splitlines())\r\n",
					"\r\n",
					"print(tmp)"
				],
				"execution_count": 17
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"#TechActivity\r\n",
					"schema_for_activity = StructType([StructField('SignalType', StringType()),StructField('StartTime', StringType()),StructField('UserAgent', StringType()),StructField('SignalId', StringType()),StructField('SisClassId', StringType()),StructField('ClassId', StringType()),StructField('ChannelId', StringType()),StructField('AppName', StringType()),StructField('ActorId', StringType()),StructField('ActorRole', StringType()),StructField('SchemaVersion', StringType()),StructField('AssignmentId', StringType()),StructField('SubmissionId', StringType()),StructField('Action', StringType()),StructField('DueDate', StringType()),StructField('ClassCreationDate', StringType()),StructField('Grade', StringType()),StructField('SourceFileExtension', StringType()),StructField('MeetingDuration', IntegerType())])\r\n",
					"\r\n",
					"data = '\"PostChannelMessage\",\"2021-06-02 14:48:11.0000000\",\"\",\"AAMkAGRlM2ViNzg5LWMzOGEtNGYyMC05MTFhLWE5MzAxNTk3NjMzNwBGAAAAAAD6n_vRPyLsQ4uBYtj1MoVQBwBONi1figD3Spv1d4sN1luqAAAAAGZ3AABONi1figD3Spv1d4sN1luqAADDKaaJAAA=\",\"\",\"9ab188a9-815d-411d-83a3-a98b56a6c614\",\"19:20990825150f4da78ffdcd6a05cfa2e2@thread.tacv2\",\"Teams\",\"5ddbce29-3ab9-405d-9350-05945a8a8542\",\"Student\",\"1.1\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"'\r\n",
					"tmp = spark.sparkContext.parallelize(data.splitlines())\r\n",
					"print(tmp)\r\n",
					"\r\n",
					"df = spark.createDataFrame(tmp, schema_for_activity)\r\n",
					"display(df)"
				],
				"execution_count": 21
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"tmp = spark.sparkContext.parallelize(\r\n",
					"  \"\"\"\r\n",
					"    |id, date, timedump\r\n",
					"    |1, \"2014/01/01 23:00:01\",1499959917383\r\n",
					"    |2, \"2014/11/31 12:40:32\",1198138008843\r\n",
					"  \"\"\".splitlines().toList).toDS()\r\n",
					"\r\n",
					""
				],
				"execution_count": 13
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"from pyspark.sql.types import StructType, StructField, StringType, IntegerType, DoubleType, ArrayType, TimestampType, BooleanType\r\n",
					"\r\n",
					"#TechActivity\r\n",
					"schema_for_activity = StructType([StructField('SignalType', StringType()),StructField('StartTime', StringType()),StructField('UserAgent', StringType()),StructField('SignalId', StringType()),StructField('SisClassId', StringType()),StructField('ClassId', StringType()),StructField('ChannelId', StringType()),StructField('AppName', StringType()),StructField('ActorId', StringType()),StructField('ActorRole', StringType()),StructField('SchemaVersion', StringType()),StructField('AssignmentId', StringType()),StructField('SubmissionId', StringType()),StructField('Action', StringType()),StructField('DueDate', StringType()),StructField('ClassCreationDate', StringType()),StructField('Grade', StringType()),StructField('SourceFileExtension', StringType()),StructField('MeetingDuration', IntegerType())])\r\n",
					"#Person\r\n",
					"schema_for_person = StructType([StructField('Id', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('LastSeenDateTime', TimestampType()),StructField('GivenName', StringType()),StructField('MiddleName', StringType()),StructField('PreferredGivenName', StringType()),StructField('PreferredMiddleName', StringType()),StructField('PreferredSurname', StringType()),StructField('Surname', StringType())])\r\n",
					"\r\n",
					"\r\n",
					"def get_sample_activity_data2():\r\n",
					"    df = spark.createDataFrame(\r\n",
					"        [\r\n",
					"            (\"PostChannelMessage\",\"2021-06-02 14:48:11.0000000\",\"\",\"AAMkAGRlM2ViNzg5LWMzOGEtNGYyMC05MTFhLWE5MzAxNTk3NjMzNwBGAAAAAAD6n_vRPyLsQ4uBYtj1MoVQBwBONi1figD3Spv1d4sN1luqAAAAAGZ3AABONi1figD3Spv1d4sN1luqAADDKaaJAAA=\",\"\",\"9ab188a9-815d-411d-83a3-a98b56a6c614\",\"19:20990825150f4da78ffdcd6a05cfa2e2@thread.tacv2\",\"Teams\",\"5ddbce29-3ab9-405d-9350-05945a8a8542\",\"Student\",\"1.1\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\")\r\n",
					"        ],\r\n",
					"        schema_for_activity \r\n",
					"    )\r\n",
					"    return df\r\n",
					"\r\n",
					"df = get_sample_activity_data2()\r\n",
					"df.show()"
				],
				"execution_count": 7
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"df = get_sample_activity_data()2\r\n",
					"df.show()"
				],
				"execution_count": 7
			}
		]
	}
}